diff --git node_modules/@angular/bazel/src/external.bzl node_modules/@angular/bazel/src/external.bzl
index 9cdb543..8b8d4d6 100755
--- node_modules/@angular/bazel/src/external.bzl
+++ node_modules/@angular/bazel/src/external.bzl
@@ -14,9 +14,9 @@ load(
     _ts_providers_dict_to_struct = "ts_providers_dict_to_struct",
 )
 load(
-    "@build_bazel_rules_nodejs//internal/common:node_module_info.bzl",
-    _NodeModuleSources = "NodeModuleSources",
-    _collect_node_modules_aspect = "collect_node_modules_aspect",
+    "@build_bazel_rules_nodejs//internal/common:npm_package_info.bzl",
+    _NpmPackageInfo = "NpmPackageInfo",
+    _node_modules_aspect = "node_modules_aspect",
 )
 load(
     "@npm_bazel_typescript//internal:ts_config.bzl",
@@ -24,11 +24,12 @@ load(
 )
 load(
     "@build_bazel_rules_nodejs//:providers.bzl",
-    _transitive_js_ecma_script_module_info = "transitive_js_ecma_script_module_info",
+    _js_ecma_script_module_info = "js_ecma_script_module_info",
+    _js_named_module_info = "js_named_module_info",
 )
 
-NodeModuleSources = _NodeModuleSources
-collect_node_modules_aspect = _collect_node_modules_aspect
+NpmPackageInfo = _NpmPackageInfo
+node_modules_aspect = _node_modules_aspect
 
 tsc_wrapped_tsconfig = _tsc_wrapped_tsconfig
 COMMON_ATTRIBUTES = _COMMON_ATTRIBUTES
@@ -42,4 +43,5 @@ DEFAULT_NG_COMPILER = "@npm//@angular/bazel/bin:ngc-wrapped"
 DEFAULT_NG_XI18N = "@npm//@angular/bazel/bin:xi18n"
 FLAT_DTS_FILE_SUFFIX = ".bundle.d.ts"
 TsConfigInfo = _TsConfigInfo
-transitive_js_ecma_script_module_info = _transitive_js_ecma_script_module_info
+js_ecma_script_module_info = _js_ecma_script_module_info
+js_named_module_info = _js_named_module_info
diff --git node_modules/@angular/bazel/src/ng_module.bzl node_modules/@angular/bazel/src/ng_module.bzl
index 2b31963..98479f7 100755
--- node_modules/@angular/bazel/src/ng_module.bzl
+++ node_modules/@angular/bazel/src/ng_module.bzl
@@ -13,11 +13,12 @@ load(
     "DEFAULT_NG_COMPILER",
     "DEFAULT_NG_XI18N",
     "DEPS_ASPECTS",
-    "NodeModuleSources",
+    "NpmPackageInfo",
     "TsConfigInfo",
-    "collect_node_modules_aspect",
+    "node_modules_aspect",
     "compile_ts",
-    "transitive_js_ecma_script_module_info",
+    "js_ecma_script_module_info",
+    "js_named_module_info",
     "ts_providers_dict_to_struct",
     "tsc_wrapped_tsconfig",
 )
@@ -527,11 +528,11 @@ def _compile_action(
             file_inputs += ctx.attr.tsconfig[TsConfigInfo].deps
 
     # Also include files from npm fine grained deps as action_inputs.
-    # These deps are identified by the NodeModuleSources provider.
+    # These deps are identified by the NpmPackageInfo provider.
     for d in ctx.attr.deps:
-        if NodeModuleSources in d:
+        if NpmPackageInfo in d:
             # Note: we can't avoid calling .to_list() on sources
-            file_inputs.extend(_filter_ts_inputs(d[NodeModuleSources].sources.to_list()))
+            file_inputs.extend(_filter_ts_inputs(d[NpmPackageInfo].sources.to_list()))
 
     # Collect the inputs and summary files from our deps
     action_inputs = depset(
@@ -617,7 +618,11 @@ def _ng_module_impl(ctx):
 
     # Add in new JS providers
     ts_providers["providers"].extend([
-        transitive_js_ecma_script_module_info(
+        js_named_module_info(
+            sources = ts_providers["typescript"]["es5_sources"],
+            deps = ctx.attr.deps,
+        ),
+        js_ecma_script_module_info(
             sources = ts_providers["typescript"]["es6_sources"],
             deps = ctx.attr.deps,
         ),
@@ -625,7 +630,7 @@ def _ng_module_impl(ctx):
 
     return ts_providers_dict_to_struct(ts_providers)
 
-local_deps_aspects = [collect_node_modules_aspect, _collect_summaries_aspect]
+local_deps_aspects = [node_modules_aspect, _collect_summaries_aspect]
 
 # Workaround skydoc bug which assumes DEPS_ASPECTS is a str type
 [local_deps_aspects.append(a) for a in DEPS_ASPECTS]
diff --git node_modules/@angular/bazel/src/ng_package/ng_package.bzl node_modules/@angular/bazel/src/ng_package/ng_package.bzl
index 2eb79b1..bde9e0d 100755
--- node_modules/@angular/bazel/src/ng_package/ng_package.bzl
+++ node_modules/@angular/bazel/src/ng_package/ng_package.bzl
@@ -14,8 +14,8 @@ specification of this format at https://goo.gl/jB3GVv
 """
 
 load("@build_bazel_rules_nodejs//internal/common:collect_es6_sources.bzl", "collect_es6_sources")
-load("@build_bazel_rules_nodejs//internal/common:node_module_info.bzl", "NodeModuleSources")
-load("@build_bazel_rules_nodejs//internal/common:sources_aspect.bzl", "sources_aspect")
+load("@build_bazel_rules_nodejs//:providers.bzl", "JSNamedModuleInfo")
+load("@build_bazel_rules_nodejs//internal/common:npm_package_info.bzl", "NpmPackageInfo")
 load(
     "@build_bazel_rules_nodejs//internal/rollup:rollup_bundle.bzl",
     "ROLLUP_ATTRS",
@@ -347,9 +347,9 @@ def _ng_package_impl(ctx):
         node_modules_files = _filter_js_inputs(ctx.files.node_modules)
 
         # Also include files from npm fine grained deps as inputs.
-        # These deps are identified by the NodeModuleSources provider.
+        # These deps are identified by the NpmPackageInfo provider.
         for d in ctx.attr.deps:
-            if NodeModuleSources in d:
+            if NpmPackageInfo in d:
                 node_modules_files += _filter_js_inputs(d.files)
         esm5_rollup_inputs = depset(node_modules_files, transitive = [esm5_sources])
 
@@ -455,9 +455,9 @@ def _ng_package_impl(ctx):
 
     devfiles = depset()
     if ctx.attr.include_devmode_srcs:
-        for d in ctx.attr.deps:
-            if hasattr(d, "node_sources"):
-                devfiles = depset(transitive = [devfiles, d.node_sources])
+        for dep in ctx.attr.deps:
+            if JSNamedModuleInfo in dep:
+                devfiles = depset(transitive = [devfiles, dep[JSNamedModuleInfo].sources])
 
     # Re-use the create_package function from the nodejs npm_package rule.
     package_dir = create_package(
@@ -469,7 +469,7 @@ def _ng_package_impl(ctx):
         files = depset([package_dir]),
     )]
 
-DEPS_ASPECTS = [esm5_outputs_aspect, sources_aspect]
+DEPS_ASPECTS = [esm5_outputs_aspect]
 
 # Workaround skydoc bug which assumes ROLLUP_DEPS_ASPECTS is a str type
 [DEPS_ASPECTS.append(a) for a in ROLLUP_DEPS_ASPECTS]
