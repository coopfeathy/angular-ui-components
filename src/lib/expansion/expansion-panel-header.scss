.mat-expansion-panel-header {
  display: flex;
  flex-direction: row;
  align-items: center;
  padding: 0 16px;

  &:focus,
  &:hover {
    outline: none;
  }

  &.mat-expanded:focus,
  &.mat-expanded:hover, {
    background: inherit;
  }

  &:not([aria-disabled='true']) {
    cursor: pointer;
  }
}

.mat-content {
  display: flex;
  flex: 1;
  flex-direction: row;
  overflow: hidden;
  padding-left: 8px;
}

.mat-expansion-panel-header-title,
.mat-expansion-panel-header-description {
  display: flex;
  flex: 1;
  margin-right: 16px;

  [dir='rtl'] & {
    margin-right: 0;
    margin-left: 16px;
  }
}

.mat-expansion-panel-header-description {
  flex: 2;
}

.mat-expansion-indicator-container {
  // A margin is required to offset the entire expansion indicator against the space the arrow
  // takes up.  It is calculated as sqrt(2 * border-width ^ 2) / 2.
  margin-bottom: 1.41px;
  padding: 0 8px 0 0;
  width: 8px;
  order: 1;

  &.mat-expansion-indicator-container-before {
    order: -1;
    padding: 0 8px;
  }
}

.mat-expansion-indicator {
  border-style: solid;
  border-width: 0 2px 2px 0;
  display: block;
  height: 6px;
  transform: rotate(45deg);
  // The transform origin is set by determining the center pointer of the arrow created. It is
  // calculated as by calculating the length of the line between the top left corner of the div,
  // and the centroid of the triangle created in the bottom right half of the div.  This centroid
  // is calculated for both X and Y (as the indicator is a square) as 
  // (indicator-width + indicator-height + 0) / 3
  // The length between the resulting coordinates and the top left (0, 0) of the div are 
  // calculated sqrt((centroids-x-coord ^ 2) + (centroids-y-coord ^ 2))
  // This value is used to transform the origin on both the X and Y axes.
  transform-origin: 5.65px 5.65px;
  width: 6px;
}
